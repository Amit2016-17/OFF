/**
@mainpage OFF

@author    Stefano Zaghi
@version   0.0.5
@date      2012-04-24
@copyright GNU Public License version 3.

@section Introduction

@off is an Open source Finite volume Fluid dynamics code.

It is written in in standard (compliant) Fortran 2003 with highly modularity as design target.

The aim of @off is to solve, numerically, the Navier-Stokes equations of fluid dynamics by means of Finite Volume technique.
The main features of @off code are the following:
- Finite Volume, Godunov-like scheme based on Euler conservation Laws written in fully conservative formulation:
  - the extension to viscous Navier-Stokes equations is under developing;
- Underling Riemann Problem solver for convective fluxes:
  - Approximate Riemann solver based on (local) Lax-Friedrichs (known also as Rusanov) algorithm;
  - Approximate Riemann solver based on Primitive Variables Linearization algorithm;
  - Approximate Riemann solver based on Two Rarefactions algorithm;
  - Approximate Riemann solver based on Two Shocks algorithm;
  - Approximate Riemann solver based on Adaptive (non iterative) PVL-TR-TS algorithm;
  - Approximate Riemann solver based on Adaptive (non iterative) LF-TR algorithm;
  - Approximate Riemann solver based on HLLC algorithm;
  - Approximate Riemann solver based on Roe linearization.
  - Exact Riemann solver based on iterative solution of u-function;
- Multi-Species fluids models:
  - Partial Densities species conservation (Standard Thermodynamic Model);
  - New multi-dimensional \f$\gamma,\eta,\chi\f$ conservation models of Favini, B. et al (under developing);
- Multi-Phases fluids models:
  - Fully-coupled Lagrangian particles transport model (under developing);
- Space numerical integration models:
  - \f$1^{st}\f$ order piece-wise constant reconstruction;
  - \f$2^{nd}\f$ order TVD linear-wise reconstruction;
  - \f$3^{rd},5^{th},7^{th}\f$ orders WENO non-linear reconstruction;
- Time approximation models:
  - \f$1^{st}\f$ order forward Euler integration;
  - \f$2^{nd},3^{rd},4^{th}\f$ orders Strong-Stability-Preserving explicit Runge-Kutta integration;
- Local pseudo-time convergence acceleration for steady simulations;
- Multi-grid time convergence acceleration:
  - Multi-grid model has been already developed, but it is affected by some not still recognized bugs. Testing and bugs fixing
    are in progress.
- Underling numerical grid models:
  - 3D, general curvilinear, body-fitted, structured multi-blocks mesh;
  - Adaptive Mesh Refinement, AMR model (under developing);
  - Blocks overlapping, overset (Chimera) model (to be developed in future);
- Computational parallelism ability:
  - Domain decomposition by means of Message Passing Interface (MPI) paradigm providing the ability to use distributed-memory
    cluster facilities;
  - Fine, local parallelism by means of OpenMP paradigm providing the ability to use shared-memory cluster facilities;
  - Fine, local parallelism by means of GPU programming (e.g. CUDA framework) providing the ability to use GPUs cluster
    facilities (to be developed in future).

@bug <b>Multi-grid Models</b>: \n Multi-grid time convergence acceleration has been developed, but it is affected by some bugs
                               that <em>blow up</em> steady simulations.
@todo \b NavierStokesEq: Extension to viscous Navier-Stokes equations
@todo \b MultiSpeciesModel: Introducing new multi-dimensional \f$\gamma,\eta,\chi\f$ conservation models of Favini, B. et al
@todo \b MultiPhaseModel: Introducing fully-coupled Lagrangian particles transport model
@todo \b AMR: Introducing AMR (Adaptive Mesh Refinement) model
@todo \b Chimera: Introducing blocks overlapping, overset (Chimera) model
@todo \b GPU: Introducing fine, local parallelism by means of GPU programming (e.g. CUDA framework)
@todo \b DocImprove: Improve the documentation
@todo \b DocMakeFile: Create the documentation of makefile

@subsection Auxiliary_Codes

There are two useful auxiliary codes:

-  IBM: Initial and Boundary conditions, Mesh generator for @off;
-  POG: Post-processor Outout Generator for @off.

@section IBM

It is an Initial and Boundary conditions, Mesh generator for @off.

This is an auxiliary tool useful for building proper inputs for @off code. ICG can build Initial Conditions files, Mesh files and
Boundary Conditions files. It accepts two kinds of inputs: \n
- Direct Blocks Description: this is the simplest available input. The initial and boundary descriptions as well as the geometry
  are directly described by means of simple ascii files. This kind of inputs can describe only simple Cartesian grids.
- Ansys (http://www.ansys.com) IcemCFD Multiblock INFO importer: this is a more complex (but more flexible) input. The initial
  conditions are described by means of simple ascii files similar to the Direct Block Description input, but the boundary
  conditions and the geometry are loaded by Ansys IcemCFD Multiblock INFO files. These files can describe more complex scenario
  with general curvilinear grids.

@section POG

It is a Post-processor Output Generator for @off.

This is an auxiliary tool useful for post-processing @off simulations outputs. It can manipulate @off outputs and it can produce
files ready to be visualized. Two different visualization standards are supported:
- Tecplot, Inc.: Tecplot is a wide-used visualization tool (http://www.tecplot.com/). POG can produce both ascii and binary files
  in Tecplot standard.
- VTK: The Visualization Toolkit (VTK) is an open-source, freely available software system for 3D computer graphics, image
  processing and visualization (http://www.vtk.org/). A lot of visualization tools support VTK standard. Among those tools
  Paraview (http://www.paraview.org/) seems to be one of the most complete. POG can produce both ascii and binary files in VTK
  standard. To this aim the Lib_VTK_IO is used.

@section Copyrights

@off is an open source project, it is distributed under the GPL v3. Anyone is interest to use, to develop or contribute to
@off is welcome.

@section Source-Code

It can be found at: https://github.com/szaghi/OFF

*/
