#!/bin/bash
#===============================================================================
#
#          FILE:  POG-ui
#
#         USAGE:  ./POG-ui -m base_name_of_mesh_file_name [options [args]]
#
#   DESCRIPTION: "user interface" for multi-files POG
#
#        AUTHOR:  Stefano Zaghi,
#       VERSION:  1.0
#       CREATED:  03/29/2011 11:30:55 AM CEST
#===============================================================================
# defaults
EFM='.geo'
EFS='.sol'
EFO='.plt'
BFS=''
bc=''
cell=''
ascii=''
tec=''
vtk=''
grl=`printf "%2.2d" 1`
n1=0
n2=0
ns=1
nb=1
os=''
outdir="unset"
job=1

function print_usage {
  echo "Usage: `basename $0` -m base_name_of_mesh_file_name [options [args]]"
  echo "Valid options are all the options of POG code (see POG for the complete list) plus the following:"
  echo "   -s base_name_of_solution_file_name"
  echo "   -o base_name_of_output_file_name"
  echo "   -em extension_of_mesh_file_name (default .geo)"
  echo "   -es extension_of_solution_file_name (default .sol)"
  echo "   -eo extension_of_output_file_name (default .plt)"
  echo "   -grl grid level (default 1)"
  echo "   -n1 first iterate (default 0)"
  echo "   -n2 last iterate (default 0)"
  echo "   -ns iterates step (default 1)"
  echo "   -nb number of blocks (default 1)"
  echo "   -j number of concurrent post-processing jobs (default 1)"
  echo
  echo " Examples: "
  echo "  Tecplot) POG-ui -m example -em .geo -s example -es .sol -o example -eo .plt -tec yes -grl 1 -n1 1 -n2 100 -ns 2 -nb 8 -j 4"
  echo "  VTK)     POG-ui -m example -em .geo -s example -es .sol -o example          -vtk yes -grl 1 -n1 1 -n2 100 -ns 2 -nb 8 -j 4"
}
if [ $# -eq 0 ] ; then
  print_usage
  exit 1
fi
while [ $# -gt 0 ]; do
  case "$1" in
    "-m")
      shift; BFM=$1
      ;;
    "-o")
      shift; BFO=$1
      ;;
    "-s")
      shift; BFS=$1
      ;;
    "-em")
      shift; EFM=$1
      ;;
    "-es")
      shift; EFS=$1
      ;;
    "-eo")
      shift; EFO=$1
      ;;
    "-bc")
      bc=$1
      ;;
    "-cell")
      cell=$1
      ;;
    "-tec")
      shift; tec="-tec "$1
      ;;
    "-vtk")
      shift; vtk="-vtk "$1
      ;;
    "-grl")
      shift; grl=`printf "%2.2d" $1`
      ;;
    "-n1")
      shift; n1=$1
      ;;
    "-n2")
      shift; n2=$1
      ;;
    "-ns")
      shift; ns=$1
      ;;
    "-nb")
      shift; nb=$1
      ;;
    "-od")
      shift; outdir=$1
      ;;
    "-os")
      shift; os="-os "$1
      ;;
    "-j")
      shift; job=$1
      ;;
    \?)
      print_usage
      exit 1
      ;;
  esac
  shift
done
if [ "$outdir" == "unset" ] ; then
  outdir="./"
else
  if [ "${outdir: -1}" != "/" ] ; then
    $outdir = $outdir"/"
  fi
fi

for n in $( seq $n1 $ns $n2 ); do
  nfile=`printf "%10.10d" $n`
  for b in $( seq 1 1 $nb ); do
    blk=`printf "%3.3d" $b`
    if [ "$BFS" != "" ] ; then
      FS="-s "$BFS.g$grl.b$blk-N_$nfile$EFS
      FO="-o "$outdir$BFO.g$grl.b$blk-N_$nfile$EFO
    else
      FS=''
      FO="-o "$outdir$BFO.g$grl.b$blk$EFO
    fi
    echo "./POG -m $BFM.g$grl.b$blk$EFM $FS $FO $bc $ascii $tec $vtk $os"
    nohup ./POG -m $BFM.g$grl.b$blk$EFM $FS $FO $bc $ascii $tec $vtk $os> /dev/null 2>&1 &
    let count+=1
    [[ $((count%$job)) -eq 0 ]] && wait
  done
done
exit 0
